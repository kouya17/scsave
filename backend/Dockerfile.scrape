FROM golang:alpine as dev

WORKDIR /app

COPY ./src/go.mod ./src/go.sum ./
RUN go mod download && go mod verify

COPY ./src .

COPY ./src/scrape/scrape.dev.cron /var/spool/cron/crontabs/root

# run crond: log level=1, foreground
CMD crond -l 1 -f


FROM golang:alpine as builder

WORKDIR /app

# pre-copy/cache go.mod for pre-downloading dependencies and only redownloading them in subsequent builds if they change
COPY ./src/go.mod ./src/go.sum ./
RUN go mod download && go mod verify

COPY ./src .
RUN cd ./scrape && \
  CGO_ENABLED=0 go build -o /bin/scrape


FROM alpine as prod

COPY --from=builder /bin/scrape /bin/scrape
COPY ./src/scrape/scrape.cron /var/spool/cron/crontabs/root

# run crond: log level=1, foreground
CMD crond -l 1 -f
